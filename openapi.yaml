openapi: 3.0.3
info:
  title: EmgR OpenApi
  description: |
    LMS app. More at [official doc](https://vymalo.github.io/image-resize)
  contact:
    email: selastlambou@gmail.com
    name: Stephane Segning
  license:
    name: MIT
  version: 0.1.0
externalDocs:
  description: |
    Find out more about Managing your Course from afar. Let's meet on 
    our website ðŸ˜‰.
  url: https://blog.ssegning.com
servers:
  - url: 'https://emgr.test'
    description: Production server
  - url: 'http://localhost:3000'
    description: Development server
  - url: '{scheme}://{host}:{port}'
    description: Custom server
    variables:
      scheme:
        enum:
          - http
          - https
        default: http
      host:
        default: localhost
      port:
        default: '3000'

tags:
  - name: Images
    description: All about image transorfmation
paths:
  ##########################################################################
  # COURSES
  ##########################################################################
  /api/images/resize:
    get:
      summary: Resize an image
      operationId: resize
      tags:
        - Images
      parameters:
        - $ref: '#/components/parameters/url'
        - $ref: '#/components/parameters/width'
        - $ref: '#/components/parameters/height'
        - $ref: '#/components/parameters/format'
      responses:
        '302':
          description: The image was resize and in the location you'll get the link to it
          headers:
            Location:
              description: URI where the image can be downloaded
              schema:
                type: string
                format: uri
  /api/images/files/{key}:
    get:
      summary: Resize an image
      operationId: download
      tags:
        - Images
      parameters:
        - $ref: '#/components/parameters/key'
      responses:
        '200':
          description: Operation performed successfully.
          content:
            image/png:
              schema:
                type: string
                format: binary
            image/jpeg:
              schema:
                type: string
                format: binary
            image/webp:
              schema:
                type: string
                format: binary
            application/octet-stream:
              schema:
                type: string
                format: binary

components:


  ##########################################################################
  # Params
  ##########################################################################
  parameters:
    url:
      name: url
      in: query
      required: true
      description: The url of the image to be resized
      schema:
        $ref: '#/components/schemas/Url'
    width:
      name: width
      in: query
      required: true
      description: The width of the final image
      schema:
        $ref: '#/components/schemas/Size'
    height:
      name: height
      in: query
      required: true
      description: The height of the final image
      schema:
        $ref: '#/components/schemas/Size'
    format:
      name: format
      in: query
      required: true
      description: The format of the final image
      schema:
        $ref: '#/components/schemas/ImageFormat'
    key:
      name: key
      in: path
      required: true
      description: The key of the final image
      schema:
        $ref: '#/components/schemas/Key'


  ##########################################################################
  # SCHEMAS (Data Models)
  ##########################################################################
  schemas:
    Key:
      type: string
    Url:
      type: string
      format: uri
    Size:
      type: integer
      format: int32
      default: 200
      maximum: 2048
      minimum: 100
    ImageFormat:
      type: string
      default: webp
      enum:
        - png
        - webp
        - jpg
