name: Build Docker

on:
  push:
    branches:
      - "**"
    tags-ignore:
      - "v*"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  docker-build:
    runs-on: ubuntu-latest

    name: Docker build for ${{ matrix.flavor }}

    permissions:
      packages: write
      contents: read

    strategy:
      matrix:
        flavor: [fs, s3,]
        include:
          - flavor: fs
            docker_target: fs_deploy
          - flavor: s3
            docker_target: s3_deploy

    steps:
      # Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: "0"
          submodules: true

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Init
        run: make init

      - name: Login to the Docker registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - id: string
        name: Lowercase the name
        uses: AsZc/change-string-case-action@v6
        with:
          string: ${{ env.IMAGE_NAME }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          tags: |
            type=schedule,pattern={{date 'YYYYMMDD-hhmmss' tz='Europe/Berlin'}},suffix=${{ matrix.flavor }}-
            type=semver,enable=true,priority=900,prefix=,suffix=${{ matrix.flavor }}-,pattern=,value=
            type=semver,pattern={{version}},suffix=${{ matrix.flavor }}-
            type=semver,pattern={{major}}.{{minor}},suffix=${{ matrix.flavor }}-
            type=semver,pattern={{major}},suffix=${{ matrix.flavor }}-
            type=sha,prefix={{branch}}-${{ matrix.flavor }}
          flavor: |
            latest=auto
          images: "${{ env.REGISTRY }}/${{ steps.string.outputs.lowercase }}"

      - name: Cache Docker layers
        uses: actions/cache@v4
        if: always()
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ matrix.flavor }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ matrix.flavor }}-

      - name: Build and push
        uses: docker/build-push-action@v6
        if: github.event_name != 'pull_request'
        with:
          context: .
          file: "Dockerfile"
          push: "true"
          target: ${{ matrix.docker_target }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache