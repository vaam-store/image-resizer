[package]
name = "emgr"
version = "0.1.1"
edition = "2024"

[[bin]]
name = "healthcheck"
path = "src/bin/healthcheck.rs"

[[bin]]
name = "benchmark"
path = "src/bin/benchmark.rs"

[dependencies]
gen-server = { path = "./packages/gen-server", features = ["conversion"] }
mimalloc = "0.1"

axum = { version = "0.8", features = ["tracing", "tokio", "macros"] }
axum-extra = { version = "0.10", features = ["cookie", "multipart"] }
axum-otel-metrics = { version = "0.11" }
axum-tracing-opentelemetry = { version = "0.29" }
tower-http = { version = "0.6", features = ["compression-full", "cors"] }

tokio = { version = "1", features = ["full"] }

reqwest = { version = "0.12", features = ["json", "stream", "http2", "gzip"] } # Optimized HTTP client
image = { version = "0.25", features = ["jpeg", "png", "webp"] } # Core image processing with specific formats
rayon = "1.8" # Parallel processing and custom thread pools
num_cpus = "1.16" # CPU detection for optimal thread pool sizing
bytes = "1.5" # Efficient byte handling
futures = "0.3" # Stream processing utilities

aws-config = { version = "1.6", optional = true, features = ["behavior-version-latest"] } # AWS SDK configuration (for MinIO)
aws-sdk-s3 = { version = "1.90", optional = true, features = ["behavior-version-latest"] } # AWS S3 client (MinIO compatible)

envconfig = { version = "0" }
derive_builder = { version = "0" }
anyhow = { version = "1" }
thiserror = { version = "2" }
urlencoding = "2.1"

o2o = { version = "0.5.4", features = ["default"] }

# For hashing the cache key
sha2 = "0"

# For async traits
async-trait = "0.1" # Required for async methods in traits

opentelemetry = { version = "0.29", optional = true }
opentelemetry-otlp = { version = "0.29", optional = true, features = ["tokio", "metrics", "trace", "grpc-tonic", "gzip-tonic"] }
opentelemetry_sdk = { version = "0.29", optional = true, features = ["tokio", "metrics", "rt-tokio", "trace"] }
opentelemetry-prometheus = { version = "0", optional = true }
tracing-subscriber = { version = "0", optional = true, features = ["env-filter", "fmt"] }
tracing-opentelemetry = { version = "0.30", optional = true }
tracing = { version = "0", features = ["attributes"] }
prometheus = { version = "0", optional = true }


[profile.prod]
inherits = "release"
lto = true
opt-level = "z"
codegen-units = 1
strip = true

# Performance-optimized profile for maximum speed
[profile.perf]
inherits = "release"
lto = "fat"
opt-level = 3
codegen-units = 1
panic = "abort"
strip = true
# Enable CPU-specific optimizations
[target.'cfg(target_arch = "x86_64")']
rustflags = ["-C", "target-cpu=native", "-C", "target-feature=+avx2,+fma"]

[features]
default = []
local_fs = []
otel = [
    "opentelemetry",
    "opentelemetry-otlp",
    "opentelemetry_sdk",
    "opentelemetry-prometheus",
    "tracing-subscriber",
    "tracing-opentelemetry",
    "prometheus"
]
s3 = ["aws-sdk-s3", "aws-config"]
in_memory = []