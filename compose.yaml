services:
  tracking:
    image: jaegertracing/all-in-one:latest
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: "0.5"
    ports:
      - "4317:4317" # OpenTelemetry gRPC receiver
      - "4318:4318" # OpenTelemetry receiver
      - "14268:14268" # Jaeger receiver
      - "16686:16686" # Jaeger UI
    environment:
      COLLECTOR_OTLP_ENABLED: "true"

  volume_init:
    image: busybox:latest
    volumes:
      - files:/app/data/images
    command:
      - /bin/sh
      - -c
      - |
        set -ex
        
        # Ensure the directory exists
        chown -R 65532:65532 /app/data/images 
        chmod -R 775 /app/data/images
    # Optional: If you want to make it executable by others too, use 777 (less secure)
    # command: sh -c "chown -R 65532:65532 /app/data/images && chmod -R 777 /app/data/images"
    # Ensure this container runs and exits successfully
    restart: "no" # Don't restart after it completes its job
    deploy:
      resources: # Minimal resources for this ephemeral task
        limits:
          memory: 10M
          cpus: "0.01"

  app:
    restart: unless-stopped
    deploy:
      replicas: 1
      resources:
        limits: &limits
          memory: 250M
          cpus: "0.125"
    build:
      context: .
      dockerfile: Dockerfile
      target: fs_deploy
    volumes: &volumes
      - files:/app/data/images
    environment:
      CDN_BASE_URL: http://localhost:13001/api/images/files
      LOG_LEVEL: ${LOG_LEVEL:-info}
      OTLP_SPAN_ENDPOINT: http://tracking:4317
      OTLP_METRIC_ENDPOINT: http://tracking:4318/v1/metrics
      OTLP_SERVICE_NAME: image-resizer
      ENABLE_HTTP2: false
      PERFORMANCE_PROFILE: high_throughput
      MAX_CONCURRENT_PROCESSING: 40
    ports:
      - "13001:3000"
    depends_on: &depends_on
      tracking:
        condition: service_started
      volume_init:
        condition: service_completed_successfully

  old-app:
    restart: unless-stopped
    deploy:
      replicas: 1
      resources:
        limits: *limits

    image: ghcr.io/vymalo/image-resizer:fs-main-72f3bbb
    volumes: *volumes
    environment:
      CDN_BASE_URL: http://localhost:13002/api/images/files
      LOG_LEVEL: ${LOG_LEVEL:-info}
      OTLP_SPAN_ENDPOINT: http://tracking:4317
      OTLP_METRIC_ENDPOINT: http://tracking:4318/v1/metrics
      OTLP_SERVICE_NAME: image-resizer
    ports:
      - "13002:3000"
    depends_on: *depends_on

  openapi-generator-cli:
    image: openapitools/openapi-generator-cli
    volumes:
      - ./openapi.yaml:/packages/openapi.yaml
      - ./packages/gen-server:/packages/gen-server
    command:
      - generate
      - -i
      - /packages/openapi.yaml
      - -g
      - rust-axum
      - -o
      - /packages/gen-server
      - --package-name
      - gen-server

volumes:
  files: